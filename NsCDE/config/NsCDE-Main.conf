#############################
# NsCDE FVWM Work in progress
#############################

SetEnv NSCDE_ROOT /opt/NsCDE
SetEnv FVWM_USERDIR $[HOME]/.NsCDE
SetEnv FVWM_DATADIR $[NSCDE_ROOT]/config
SetEnv FVWM_SCRIPTDIR $[NSCDE_ROOT]/lib/scripts
SetEnv FVWM_FORMDIR $[NSCDE_ROOT]/lib/forms
SetEnv SM_SAVE_DIR $[FVWM_USERDIR]/tmp
PipeRead "echo SetEnv NSCDE_DPI $($NSCDE_ROOT/bin/getdpi)"
Piperead 'echo "SetEnv NSCDE_OS $(uname -s)"'

DestroyStyle *

# Core Options, if necessary, can be overriden later
ExecUseShell /bin/ksh
Emulate Mwm
IgnoreModifiers L25
ImagePath $[FVWM_USERDIR]/icons:$[NSCDE_ROOT]/share/icons:$[NSCDE_ROOT]/share/cursors:/usr/include/X11/bitmaps
ClickTime 750
DefaultIcon NsCDE/Noicon.xpm
# EwmhBaseStruts 0 76 0 76

# Main function which reads either user overriden or local config
# and defaults to system regular config if none found. This is
# extended version of Fvwm's 'Read' command.
DestroyFunc f_ReadCfg
AddToFunc f_ReadCfg
+ I InfoStoreAdd readconf n
+ I Test (f $[FVWM_USERDIR]/NsCDE-$0.conf) Read $[FVWM_USERDIR]/NsCDE-$0.conf
+ I TestRc (Match) InfoStoreAdd readconf y
+ I Test (EnvMatch infostore.readconf y) Echo Config file NsCDE-$0.conf read from $[FVWM_USERDIR]
+ I Test (EnvMatch infostore.readconf n) Read $[FVWM_DATADIR]/NsCDE-$0.conf
+ I TestRc (Match) Test (f $[FVWM_DATADIR]/NsCDE-$0.conf) Echo Config file NsCDE-$0.conf read from $[FVWM_DATADIR]
+ I InfoStoreRemove readconf
+ I InfoStoreAdd readlocal n
+ I Test (f $[FVWM_USERDIR]/NsCDE-$0.local) Read $[FVWM_USERDIR]/NsCDE-$0.local
+ I TestRc (Match) InfoStoreAdd readlocal y
+ I Test (EnvMatch infostore.readlocal y) Echo Local config file NsCDE-$0.local read from $[FVWM_USERDIR]
+ I InfoStoreRemove readlocal

# This needs to be called before FrontPanel which Swallows Workspace Manager
DestroyFunc f_SetWSMConf
AddToFunc f_SetWSMConf
+ I Test (f $[FVWM_USERDIR]/WSM.conf) InfoStoreAdd wsmconf $[FVWM_USERDIR]/WSM.conf
+ I TestRc (NoMatch) InfoStoreAdd wsmconf $[NSCDE_ROOT]/config/WSM.conf

# Set desktop names from WSM.conf (system or user's one)
DestroyFunc f_DesktopNames
AddToFunc f_DesktopNames
+ I f_SetWSMConf
+ I PipeRead 'egrep "^WSP:.*:" $[infostore.wsmconf] | sort -t: -nk2 | \
              awk -F: \'{ if ($$$1 == \"WSP\") print \"DesktopName\", ($$$2 - 1), $$$3 }\' | \
              head -$[infostore.desknum]'

###################################
# Read User or System Configuration
###################################
# Define calling function
DestroyFunc f_ReadMainConfig
AddToFunc f_ReadMainConfig
+ I Test (f $[FVWM_USERDIR]/NsCDE.conf) Read $[FVWM_USERDIR]/NsCDE.conf
+ I TestRc (Match) Break
+ I Test (!f $[FVWM_USERDIR]/NsCDE.conf) Read $[FVWM_DATADIR]/NsCDE.conf
+ I Echo Main NsCDE config file NsCDE.conf read from $[FVWM_DATADIR]

# Call Important functions
f_ReadMainConfig
f_DesktopNames

# Main Start Function - must be defined AFTER f_ReadMainConfig
# This is called internally by fvwm during start and/or restart
DestroyFunc StartFunction
AddToFunc StartFunction
+ I Exec exec fvwm-root $[FVWM_USERDIR]/.BGdefault
+ I Module FvwmEvent MainLoop
+ I Module FvwmAnimate
+ I Module FvwmCommandS
+ I Test (!EnvMatch infostore.sandboxmode 1) Module FvwmAuto 10 -menter f_AutoHide
+ I Test (!EnvIsSet infostore.afrmilisecs) InfoStoreAdd afrmilisecs 200
+ I Test (EnvMatch infostore.autoraisefocus 1) Module FvwmAuto $[infostore.afrmilisecs] -mfocus
+ I Test (EnvMatch infostore.iconbox 1) Module FvwmIconMan NsCDEIconBox
+ I Test (!EnvMatch infostore.sandboxmode 1 Init) Module FvwmBanner
+ I Test (!EnvMatch infostore.sandboxmode 1) Schedule 1000 Module FvwmBacker
+ I Test (!EnvMatch infostore.sandboxmode 1) ModuleSynchronous FvwmButtons FrontPanel
+ I Schedule 30 f_FrontPanelSetIcons
+ I Schedule 300 f_FrontPanelSetIcons
+ I Test (!EnvMatch infostore.sandboxmode 1) Module FvwmPager LocalPager * $[infostore.fvwmdesknum]

# Set page matrix from NsCDE.conf infostore.pagematrixX and infostore.pagematrixY
PipeRead 'echo DesktopSize $[infostore.pagematrixX]x$[infostore.pagematrixY]'

# For virtual and sandbox restricted mode only ...
Test (EnvMatch infostore.sandboxmode 1 x $[FVWM_USERDIR]/Sandbox-Xinit.sh) Exec exec $[FVWM_USERDIR]/Sandbox-Xinit.sh
Test (EnvMatch infostore.sandboxmode 1 x $[FVWM_USERDIR]/Sandbox-Xinit.sh) SetEnv XAPPLRESDIR $[FVWM_USERDIR]/app-defaults

################################
# Read the rest of configuration
################################
f_Readcfg Functions
f_Readcfg Colorset
Test (!EnvMatch infostore.sandboxmode 1) f_Readcfg Backdrops
f_Readcfg Font-$[NSCDE_DPI]dpi
f_Readcfg Style
Test (!EnvMatch infostore.sandboxmode 1) f_Readcfg Auto
f_KeyMenu -a
f_Readcfg Keybindings
f_Readcfg Mousebindings
f_Readcfg Menus
f_Readcfg Animate
Test (!EnvMatch infostore.sandboxmode 1) f_Readcfg Banner
Test (EnvMatch infostore.iconbox 1) f_ReadCfg IconMan
f_Readcfg Ident
f_Readcfg Form
f_Readcfg Script
Test (!EnvMatch infostore.sandboxmode 1) f_Readcfg Backer
f_Readcfg Event
Test (!EnvMatch infostore.sandboxmode 1) f_Readcfg Pager-WspLocPager
Test (!EnvMatch infostore.sandboxmode 1) f_Readcfg Pager-LocalPager
Test (!EnvMatch infostore.sandboxmode 1) f_Readcfg Pager-GlobalPager

# Read Subpanels
Test (!EnvMatch infostore.sandboxmode 1) f_Readcfg Subpanels

# Read Front Panel
Test (!EnvMatch infostore.sandboxmode 1) f_Readcfg FrontPanel

# Must be after reading fonts
DefaultFont "$[infostore.font.variable.normal.medium]"

# Init / Start - login function after non-session login
Test (!EnvMatch infostore.sandboxmode 1) f_Readcfg Init
Test (EnvMatch infostore.sandboxmode 1) f_Readcfg Sandbox

# For documentation purposes browser must be available.
# Execute this function after everything else is already
# in place.
Test (!EnvMatch infostore.sandboxmode 1) f_FindBrowser
