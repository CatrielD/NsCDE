#
# This file is a part of the NsCDE - Not so Common Desktop Environment
# Author: Hegel3DReloaded
# Licence: GPLv3
#

WindowTitle {Page Manager}
WindowSize 36 34
Colorset 21

Init
Begin
   Set $PageMatrixX = (GetScriptArgument 1)
   Set $PageMatrixY = (GetScriptArgument 2)
   Set $PagesXY = $PageMatrixX {x} $PageMatrixY
   Set $PageNo = (Mult $PageMatrixX $PageMatrixY)

   Set $PageTooBig = 0
   If $PageMatrixX >= 4 Then
   Begin
      Set $PageTooBig = 1
   End
   If $PageMatrixY >= 4 Then
   Begin
      Set $PageTooBig = 1
   End

   If $PageTooBig == 1 Then
   Begin
      ChangeTitle 2 {PG}
      ShowWidget 10
      ShowWidget 2
      HideWidget 1
   End

   # Configuration source selection
   Set $UserConfig = (GetOutput {sh -c '[ -s $HOME/.NsCDE/WSM.conf ] && echo 1 || echo 0'} 1 1)
   If $UserConfig == 1 Then
   Begin
      Set $ConfFile = {$HOME/.NsCDE/WSM.conf}
   End
   Else
   Begin
      Set $ConfFile = {$NSCDE_ROOT/config/WSM.conf}
   End

   # Menus for Pages button menu
   Set $ParsePg = {egrep "^PG:.*:.*:" } $ConfFile { | sort -t':' -nk2 | uniq | sed -n 's/:/ /g; 1,} $PageNo {p'}

   Set $cnt = 1
   For $n = 1 To $PageNo Do
   Begin
      Set $pgnum = (GetOutput $ParsePg $n 2)
      If $pgnum == $cnt Then
      Begin
         Set $cnt = (Add $cnt 1)
      End
      Else
      Begin
         Do {Echo Warning: Page descriptions in } $CfFile { are not parsable. Using system defaults.}
         Set $ReadSysWSM = 1
      End
   End

   If $ReadSysWSM == 1 Then
   Begin
      Set $ParsePg = {egrep "^PG:.*:.*:" $NSCDE_ROOT/share/defaults/pages/} $PagesXY { | sort -t':' -nk2 | uniq | sed -n 's/:/ /g; 1,} $PageNo {p'}
   End

   # Page descriptions here, page numbers and XY addresses in Widget 3
   For $p = 1 To $PageNo Do
   Begin
      Set $pgline = (GetOutput $ParsePg $p -1)
      Set $pgdescout = {echo } $pgline { | cut -d" " -f 4-32}
      Set $pgdesc = (GetOutput  $pgdescout 1 -1)

      If $PgMenuTitle == {} Then
      Begin
         If $pgdesc == {} Then
         Begin
            Set $PgMenuTitle = {Page } $p
         End
         Else
         Begin
            Set $PgMenuTitle = $p {: } $pgdesc
         End
      End
      Else
      Begin
         If $pgdesc == {} Then
         Begin
            Set $PgMenuTitle = $PgMenuTitle {|Page } $p
         End
         Else
         Begin
            Set $PgMenuTitle = $PgMenuTitle {|} $p {: } $pgdesc
         End
      End

   End

   Set $PgMenuTitleFinal = {    Pager ...|} $PgMenuTitle
   ChangeTitle 3 $PgMenuTitleFinal

   # Initial states
   Set $PopupMenuVisible = 0
   Set $ClickedWhen = 0
End

PeriodicTasks
Begin
   If (RemainderOfDiv (GetTime) 20) == 0 Then
   Begin
      If $PopupMenuVisible == 1 Then
      Begin
         Set $MinusClickedWhen = {-} $ClickedWhen
         If (Add (GetTime) $MinusClickedWhen) > 10 Then
         Begin
            If $PageTooBig == 0 Then
            Begin
               ShowWidget 1
            End
            Else
            Begin
               ShowWidget 10
               ShowWidget 2
            End
            HideWidget 3
            Set $PopupMenuVisible = 0
         End
      End
   End
End

Widget 10
Property
   Position 0 0
   Size 27 29
   Type ItemDraw
   Flags NoReliefString Hidden
   BackColor {#000000}
   Title {}
      Main
         Case message of
         SingleClic :
         Begin
         End
End

Widget 1
Property
   Position 0 0
   Size 35 32
   Type ItemDraw
   Flags NoReliefString Left
   Icon NsCDE/Wsm.xpm
      Main
         Case message of
         SingleClic :
         Begin
            ShowWidget 3
            Set $PopupMenuVisible = 1
            HideWidget 1
            Set $ClickedWhen = (GetTime)
         End
         1 :
         Begin
            Set $CurrPage = (LastString)
            If $PageTooBig == 0 Then
            Begin
               Set $IconName = {NsCDE/Wsm_} $PagesXY {_} $CurrPage {.xpm}
               ChangeIcon 1 $IconName
            End
            Else
            Begin
               Set $Title2 = $CurrPage
               ChangeTitle 2 $Title2
            End
         End
End

Widget 2
Property
   Position 1 1
   Size 26 26
   Type PushButton
   Flags NoReliefString Hidden
   Colorset 1
   Title {X}
      Main
         Case message of
         SingleClic :
         Begin
            ShowWidget 3
            Set $PopupMenuVisible = 1
            HideWidget 2
            HideWidget 10
         End
End

Widget 3
Property
   Position 1 1
   Size 26 26
   Type PopupMenu
   Flags NoReliefString Hidden
   Colorset 22
   Title {......................}
      Main
         Case message of
         SingleClic :
         Begin
            Set $Val = (Add (GetValue 3) -1)

            If $Val == 0 Then
            Begin
               Do {f_MoveCursorAndExec 0 -8 f_BringLocalPager}
            End

            # Page numbers and addresses here, page descriptions in Init
            For $pag = 1 To $PageNo Do
            Begin
               Set $pgidx = (GetOutput $ParsePg $pag 2)
               Set $pgaddr = (GetOutput $ParsePg $pag 3)

               If $Val == $pgidx Then
               Begin
                  Set $pgpart1 = (StrCopy $pgaddr 1 1)
                  Set $pgpart2 = (StrCopy $pgaddr 2 2)
                  Do {GotoPage } $pgpart1 { } $pgpart2
               End
            End

            If $PageTooBig == 0 Then
            Begin
               ShowWidget 1
            End
            Else
            Begin
               ShowWidget 10
               ShowWidget 2
            End
            HideWidget 3
            Set $PopupMenuVisible = 0
         End
         1 :
         Begin
            If $PopupMenuVisible == 1 Then
            Begin
               If $PageTooBig == 0 Then
               Begin
                  ShowWidget 1
               End
               Else
               Begin
                  ShowWidget 10
                  ShowWidget 2
               End
               HideWidget 3
               Set $PopupMenuVisible = 0
            End
         End
End

